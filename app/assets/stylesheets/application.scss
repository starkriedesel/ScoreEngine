/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require foundation_and_overrides
 *= require formee
 *= require toggle-switch
 *= require font-awesome
 */

@import "compass/css3";

$service-down-color: #B24A48;
$service-running-color: #3C8A41;
$service-error-color: #E57746;
$service-off-color: #CCC;

.content {
    margin-top: 10px;
}

header {
    background-color: #2ba6cb;
    padding: 10px 0px;
}

header.running {
  background-color: $service-running-color;
}
header.down {
  background-color: $service-down-color;
}
header.error {
  background-color: $service-error-color;
}
header.off {
  background-color: $service-off-color;
  h1 {
    color: #555;
  }
}

header h1 {
    color: #FFF;
    font-weight: 500;
}

.hint-text {
    padding-top: 5px;
    color: #888;
    float: right;
}

.form-error-text {
    padding-top: 5px;
    color: #d10000;
    float: left;
}

input:focus ~ .hint-text {
  color: #000;
  @include transition(all 0.15s linear);
}

.tabs.vertical.services {
  dd a{
    font-weight: bold;
    color: inherit;
  }
  dd.off {
    border-left-color: $service-off-color;
    color: #555;
  }
  dd.down {
    border-left-color: $service-down-color;
    color: $service-down-color;
  }

  dd.running {
    border-left-color: $service-running-color;
    color: $service-running-color;
  }

  dd.error {
    border-left-color: $service-error-color;
    color: $service-error-color;
  }
}

table a {
  font-weight: bold;
  text-decoration: underline;
}

table.services, table.challenges {
  tr {
    min-height: 32px;
    td a {
      color: inherit;
    }
  }

  td.service_img {
    width: 32px;
    background-repeat: no-repeat;
  }

  tr.running, tr.complete {
    td.service_img {
      background-image: url("/assets/blueberry/check.png");
    }
    td {
      color: $service-running-color;
    }
  }
  tr.down {
    td.service_img {
      background-image: url("/assets/blueberry/close_delete.png");
    }
    td {
      color: $service-down-color;
    }
  }
  tr.error {
    td.service_img {
      background-image: url("/assets/blueberry/attention.png");
    }
    td {
      color: $service-error-color;
    }
  }
  tr.off, tr.incomplete {
    td.service_img {
      background-image: url("/assets/blueberry/off.png");
    }
    td {
      color: #555;
    }
  }
}

td ul.inline-list, td ol.inline-list {
  margin-bottom: 0px;
}

ul.inline-list .label, ol.inline-list .label {
  margin-top: 1px;
}

.tabs.vertical dd:hover {
  a {
    background-color: #d8d8d8;
    padding-left: 10px;
    -webkit-transition: all 1s ease;
    -moz-transition: all 1s ease;
    -o-transition: all 1s ease;
    -ms-transition: all 1s ease;
    transition: all 1s ease;
  }
}

.service-log .details, .service-log .debug {
  display: none;
}

.service-log .time {
  color: #888;
}

.progress.text {
  height: auto;
}

.progress.text .meter .text {
  padding: 4px;
  color: black;
  font-weight: bold;
  //text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.4);
  text-align: center;
  //overflow: hidden;
}

.message_content * {
  font-size: 1.7em;
  color: black;
}

a [class^="icon-"] {
  text-decoration: none;
}

.hidden {
  display: none;
}

.alert-box ul {
  list-style-position: inside;
  margin-bottom: 0px;
}

.daemon-log {
  .info {
    background-color: #2ba6cb;
  }
  .error {
    background-color: $service-down-color;
  }
  .warn {
    background-color: $service-error-color;
  }
}